#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Ten kod został wygenerowany przez narzędzie.
//     Wersja wykonawcza:4.0.30319.42000
//
//     Zmiany w tym pliku mogą spowodować nieprawidłowe zachowanie i zostaną utracone, jeśli
//     kod zostanie ponownie wygenerowany.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Biblioteka.Model
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Biblioteka")]
	public partial class BibliotekaSQLDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertWypozyczone(Wypozyczone instance);
    partial void UpdateWypozyczone(Wypozyczone instance);
    partial void DeleteWypozyczone(Wypozyczone instance);
    partial void InsertAutor(Autor instance);
    partial void UpdateAutor(Autor instance);
    partial void DeleteAutor(Autor instance);
    partial void InsertAutorzyKsiazek(AutorzyKsiazek instance);
    partial void UpdateAutorzyKsiazek(AutorzyKsiazek instance);
    partial void DeleteAutorzyKsiazek(AutorzyKsiazek instance);
    partial void InsertCzytelnik(Czytelnik instance);
    partial void UpdateCzytelnik(Czytelnik instance);
    partial void DeleteCzytelnik(Czytelnik instance);
    partial void InsertEgzemplarz(Egzemplarz instance);
    partial void UpdateEgzemplarz(Egzemplarz instance);
    partial void DeleteEgzemplarz(Egzemplarz instance);
    partial void InsertEpoka(Epoka instance);
    partial void UpdateEpoka(Epoka instance);
    partial void DeleteEpoka(Epoka instance);
    partial void InsertGatunek(Gatunek instance);
    partial void UpdateGatunek(Gatunek instance);
    partial void DeleteGatunek(Gatunek instance);
    partial void InsertKsiazka(Ksiazka instance);
    partial void UpdateKsiazka(Ksiazka instance);
    partial void DeleteKsiazka(Ksiazka instance);
    partial void InsertNarodowosc(Narodowosc instance);
    partial void UpdateNarodowosc(Narodowosc instance);
    partial void DeleteNarodowosc(Narodowosc instance);
    partial void InsertPracownik(Pracownik instance);
    partial void UpdatePracownik(Pracownik instance);
    partial void DeletePracownik(Pracownik instance);
    partial void InsertRezerwacja(Rezerwacja instance);
    partial void UpdateRezerwacja(Rezerwacja instance);
    partial void DeleteRezerwacja(Rezerwacja instance);
    partial void InsertWydawnictwo(Wydawnictwo instance);
    partial void UpdateWydawnictwo(Wydawnictwo instance);
    partial void DeleteWydawnictwo(Wydawnictwo instance);
    #endregion
		
		public BibliotekaSQLDataContext() : 
				base(global::Biblioteka.Properties.Settings.Default.BibliotekaConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public BibliotekaSQLDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public BibliotekaSQLDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public BibliotekaSQLDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public BibliotekaSQLDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Wypozyczone> Wypozyczone
		{
			get
			{
				return this.GetTable<Wypozyczone>();
			}
		}
		
		public System.Data.Linq.Table<Autor> Autor
		{
			get
			{
				return this.GetTable<Autor>();
			}
		}
		
		public System.Data.Linq.Table<AutorzyKsiazek> AutorzyKsiazek
		{
			get
			{
				return this.GetTable<AutorzyKsiazek>();
			}
		}
		
		public System.Data.Linq.Table<Czytelnik> Czytelnik
		{
			get
			{
				return this.GetTable<Czytelnik>();
			}
		}
		
		public System.Data.Linq.Table<Egzemplarz> Egzemplarz
		{
			get
			{
				return this.GetTable<Egzemplarz>();
			}
		}
		
		public System.Data.Linq.Table<Epoka> Epoka
		{
			get
			{
				return this.GetTable<Epoka>();
			}
		}
		
		public System.Data.Linq.Table<Gatunek> Gatunek
		{
			get
			{
				return this.GetTable<Gatunek>();
			}
		}
		
		public System.Data.Linq.Table<Ksiazka> Ksiazka
		{
			get
			{
				return this.GetTable<Ksiazka>();
			}
		}
		
		public System.Data.Linq.Table<Narodowosc> Narodowosc
		{
			get
			{
				return this.GetTable<Narodowosc>();
			}
		}
		
		public System.Data.Linq.Table<Pracownik> Pracownik
		{
			get
			{
				return this.GetTable<Pracownik>();
			}
		}
		
		public System.Data.Linq.Table<Rezerwacja> Rezerwacja
		{
			get
			{
				return this.GetTable<Rezerwacja>();
			}
		}
		
		public System.Data.Linq.Table<Wydawnictwo> Wydawnictwo
		{
			get
			{
				return this.GetTable<Wydawnictwo>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Wypozyczone")]
	public partial class Wypozyczone : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDHistorii;
		
		private System.Nullable<int> _EgzemplarzID;
		
		private System.Nullable<int> _UzytkownikID;
		
		private System.Nullable<System.DateTime> _Data_wyp;
		
		private System.Nullable<System.DateTime> _Data_zwr;
		
		private System.Nullable<int> _PracownikID;
		
		private EntityRef<Czytelnik> _Czytelnik;
		
		private EntityRef<Egzemplarz> _Egzemplarz;
		
		private EntityRef<Pracownik> _Pracownik;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDHistoriiChanging(int value);
    partial void OnIDHistoriiChanged();
    partial void OnEgzemplarzIDChanging(System.Nullable<int> value);
    partial void OnEgzemplarzIDChanged();
    partial void OnUzytkownikIDChanging(System.Nullable<int> value);
    partial void OnUzytkownikIDChanged();
    partial void OnData_wypChanging(System.Nullable<System.DateTime> value);
    partial void OnData_wypChanged();
    partial void OnData_zwrChanging(System.Nullable<System.DateTime> value);
    partial void OnData_zwrChanged();
    partial void OnPracownikIDChanging(System.Nullable<int> value);
    partial void OnPracownikIDChanged();
    #endregion
		
		public Wypozyczone()
		{
			this._Czytelnik = default(EntityRef<Czytelnik>);
			this._Egzemplarz = default(EntityRef<Egzemplarz>);
			this._Pracownik = default(EntityRef<Pracownik>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDHistorii", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDHistorii
		{
			get
			{
				return this._IDHistorii;
			}
			set
			{
				if ((this._IDHistorii != value))
				{
					this.OnIDHistoriiChanging(value);
					this.SendPropertyChanging();
					this._IDHistorii = value;
					this.SendPropertyChanged("IDHistorii");
					this.OnIDHistoriiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EgzemplarzID", DbType="Int")]
		public System.Nullable<int> EgzemplarzID
		{
			get
			{
				return this._EgzemplarzID;
			}
			set
			{
				if ((this._EgzemplarzID != value))
				{
					if (this._Egzemplarz.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEgzemplarzIDChanging(value);
					this.SendPropertyChanging();
					this._EgzemplarzID = value;
					this.SendPropertyChanged("EgzemplarzID");
					this.OnEgzemplarzIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UzytkownikID", DbType="Int")]
		public System.Nullable<int> UzytkownikID
		{
			get
			{
				return this._UzytkownikID;
			}
			set
			{
				if ((this._UzytkownikID != value))
				{
					this.OnUzytkownikIDChanging(value);
					this.SendPropertyChanging();
					this._UzytkownikID = value;
					this.SendPropertyChanged("UzytkownikID");
					this.OnUzytkownikIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Data_wyp", DbType="Date")]
		public System.Nullable<System.DateTime> Data_wyp
		{
			get
			{
				return this._Data_wyp;
			}
			set
			{
				if ((this._Data_wyp != value))
				{
					this.OnData_wypChanging(value);
					this.SendPropertyChanging();
					this._Data_wyp = value;
					this.SendPropertyChanged("Data_wyp");
					this.OnData_wypChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Data_zwr", DbType="Date")]
		public System.Nullable<System.DateTime> Data_zwr
		{
			get
			{
				return this._Data_zwr;
			}
			set
			{
				if ((this._Data_zwr != value))
				{
					this.OnData_zwrChanging(value);
					this.SendPropertyChanging();
					this._Data_zwr = value;
					this.SendPropertyChanged("Data_zwr");
					this.OnData_zwrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PracownikID", DbType="Int")]
		public System.Nullable<int> PracownikID
		{
			get
			{
				return this._PracownikID;
			}
			set
			{
				if ((this._PracownikID != value))
				{
					if ((this._Czytelnik.HasLoadedOrAssignedValue || this._Pracownik.HasLoadedOrAssignedValue))
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPracownikIDChanging(value);
					this.SendPropertyChanging();
					this._PracownikID = value;
					this.SendPropertyChanged("PracownikID");
					this.OnPracownikIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Czytelnik_Wypozyczone", Storage="_Czytelnik", ThisKey="PracownikID", OtherKey="IDUzytkownika", IsForeignKey=true)]
		public Czytelnik Czytelnik
		{
			get
			{
				return this._Czytelnik.Entity;
			}
			set
			{
				Czytelnik previousValue = this._Czytelnik.Entity;
				if (((previousValue != value) 
							|| (this._Czytelnik.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Czytelnik.Entity = null;
						previousValue.Wypozyczone.Remove(this);
					}
					this._Czytelnik.Entity = value;
					if ((value != null))
					{
						value.Wypozyczone.Add(this);
						this._PracownikID = value.IDUzytkownika;
					}
					else
					{
						this._PracownikID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Czytelnik");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Egzemplarz_Wypozyczone", Storage="_Egzemplarz", ThisKey="EgzemplarzID", OtherKey="IDEgzeplarza", IsForeignKey=true)]
		public Egzemplarz Egzemplarz
		{
			get
			{
				return this._Egzemplarz.Entity;
			}
			set
			{
				Egzemplarz previousValue = this._Egzemplarz.Entity;
				if (((previousValue != value) 
							|| (this._Egzemplarz.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Egzemplarz.Entity = null;
						previousValue.Wypozyczone.Remove(this);
					}
					this._Egzemplarz.Entity = value;
					if ((value != null))
					{
						value.Wypozyczone.Add(this);
						this._EgzemplarzID = value.IDEgzeplarza;
					}
					else
					{
						this._EgzemplarzID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Egzemplarz");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Pracownik_Wypozyczone", Storage="_Pracownik", ThisKey="PracownikID", OtherKey="IDPracownika", IsForeignKey=true)]
		public Pracownik Pracownik
		{
			get
			{
				return this._Pracownik.Entity;
			}
			set
			{
				Pracownik previousValue = this._Pracownik.Entity;
				if (((previousValue != value) 
							|| (this._Pracownik.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Pracownik.Entity = null;
						previousValue.Wypozyczone.Remove(this);
					}
					this._Pracownik.Entity = value;
					if ((value != null))
					{
						value.Wypozyczone.Add(this);
						this._PracownikID = value.IDPracownika;
					}
					else
					{
						this._PracownikID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Pracownik");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Autor")]
	public partial class Autor : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDAutor;
		
		private string _Imie;
		
		private string _Nazwisko;
		
		private System.Nullable<int> _NarodowoscID;
		
		private System.Nullable<System.DateTime> _Data_ur;
		
		private System.Nullable<System.DateTime> _Data_sm;
		
		private System.Nullable<int> _EpokaID;
		
		private EntitySet<AutorzyKsiazek> _AutorzyKsiazek;
		
		private EntityRef<Epoka> _Epoka;
		
		private EntityRef<Narodowosc> _Narodowosc;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDAutorChanging(int value);
    partial void OnIDAutorChanged();
    partial void OnImieChanging(string value);
    partial void OnImieChanged();
    partial void OnNazwiskoChanging(string value);
    partial void OnNazwiskoChanged();
    partial void OnNarodowoscIDChanging(System.Nullable<int> value);
    partial void OnNarodowoscIDChanged();
    partial void OnData_urChanging(System.Nullable<System.DateTime> value);
    partial void OnData_urChanged();
    partial void OnData_smChanging(System.Nullable<System.DateTime> value);
    partial void OnData_smChanged();
    partial void OnEpokaIDChanging(System.Nullable<int> value);
    partial void OnEpokaIDChanged();
    #endregion
		
		public Autor()
		{
			this._AutorzyKsiazek = new EntitySet<AutorzyKsiazek>(new Action<AutorzyKsiazek>(this.attach_AutorzyKsiazek), new Action<AutorzyKsiazek>(this.detach_AutorzyKsiazek));
			this._Epoka = default(EntityRef<Epoka>);
			this._Narodowosc = default(EntityRef<Narodowosc>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDAutor", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDAutor
		{
			get
			{
				return this._IDAutor;
			}
			set
			{
				if ((this._IDAutor != value))
				{
					this.OnIDAutorChanging(value);
					this.SendPropertyChanging();
					this._IDAutor = value;
					this.SendPropertyChanged("IDAutor");
					this.OnIDAutorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Imie", DbType="VarChar(20)")]
		public string Imie
		{
			get
			{
				return this._Imie;
			}
			set
			{
				if ((this._Imie != value))
				{
					this.OnImieChanging(value);
					this.SendPropertyChanging();
					this._Imie = value;
					this.SendPropertyChanged("Imie");
					this.OnImieChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nazwisko", DbType="VarChar(30)")]
		public string Nazwisko
		{
			get
			{
				return this._Nazwisko;
			}
			set
			{
				if ((this._Nazwisko != value))
				{
					this.OnNazwiskoChanging(value);
					this.SendPropertyChanging();
					this._Nazwisko = value;
					this.SendPropertyChanged("Nazwisko");
					this.OnNazwiskoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NarodowoscID", DbType="Int")]
		public System.Nullable<int> NarodowoscID
		{
			get
			{
				return this._NarodowoscID;
			}
			set
			{
				if ((this._NarodowoscID != value))
				{
					if (this._Narodowosc.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNarodowoscIDChanging(value);
					this.SendPropertyChanging();
					this._NarodowoscID = value;
					this.SendPropertyChanged("NarodowoscID");
					this.OnNarodowoscIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Data_ur", DbType="Date")]
		public System.Nullable<System.DateTime> Data_ur
		{
			get
			{
				return this._Data_ur;
			}
			set
			{
				if ((this._Data_ur != value))
				{
					this.OnData_urChanging(value);
					this.SendPropertyChanging();
					this._Data_ur = value;
					this.SendPropertyChanged("Data_ur");
					this.OnData_urChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Data_sm", DbType="Date")]
		public System.Nullable<System.DateTime> Data_sm
		{
			get
			{
				return this._Data_sm;
			}
			set
			{
				if ((this._Data_sm != value))
				{
					this.OnData_smChanging(value);
					this.SendPropertyChanging();
					this._Data_sm = value;
					this.SendPropertyChanged("Data_sm");
					this.OnData_smChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EpokaID", DbType="Int")]
		public System.Nullable<int> EpokaID
		{
			get
			{
				return this._EpokaID;
			}
			set
			{
				if ((this._EpokaID != value))
				{
					if (this._Epoka.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEpokaIDChanging(value);
					this.SendPropertyChanging();
					this._EpokaID = value;
					this.SendPropertyChanged("EpokaID");
					this.OnEpokaIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Autor_AutorzyKsiazek", Storage="_AutorzyKsiazek", ThisKey="IDAutor", OtherKey="AutorID")]
		public EntitySet<AutorzyKsiazek> AutorzyKsiazek
		{
			get
			{
				return this._AutorzyKsiazek;
			}
			set
			{
				this._AutorzyKsiazek.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Epoka_Autor", Storage="_Epoka", ThisKey="EpokaID", OtherKey="IDEpoka", IsForeignKey=true)]
		public Epoka Epoka
		{
			get
			{
				return this._Epoka.Entity;
			}
			set
			{
				Epoka previousValue = this._Epoka.Entity;
				if (((previousValue != value) 
							|| (this._Epoka.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Epoka.Entity = null;
						previousValue.Autor.Remove(this);
					}
					this._Epoka.Entity = value;
					if ((value != null))
					{
						value.Autor.Add(this);
						this._EpokaID = value.IDEpoka;
					}
					else
					{
						this._EpokaID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Epoka");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Narodowosc_Autor", Storage="_Narodowosc", ThisKey="NarodowoscID", OtherKey="IDNarodowosc", IsForeignKey=true)]
		public Narodowosc Narodowosc
		{
			get
			{
				return this._Narodowosc.Entity;
			}
			set
			{
				Narodowosc previousValue = this._Narodowosc.Entity;
				if (((previousValue != value) 
							|| (this._Narodowosc.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Narodowosc.Entity = null;
						previousValue.Autor.Remove(this);
					}
					this._Narodowosc.Entity = value;
					if ((value != null))
					{
						value.Autor.Add(this);
						this._NarodowoscID = value.IDNarodowosc;
					}
					else
					{
						this._NarodowoscID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Narodowosc");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AutorzyKsiazek(AutorzyKsiazek entity)
		{
			this.SendPropertyChanging();
			entity.Autor = this;
		}
		
		private void detach_AutorzyKsiazek(AutorzyKsiazek entity)
		{
			this.SendPropertyChanging();
			entity.Autor = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AutorzyKsiazek")]
	public partial class AutorzyKsiazek : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDAutorzy;
		
		private System.Nullable<int> _AutorID;
		
		private System.Nullable<int> _KsiazkaID;
		
		private EntityRef<Autor> _Autor;
		
		private EntityRef<Ksiazka> _Ksiazka;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDAutorzyChanging(int value);
    partial void OnIDAutorzyChanged();
    partial void OnAutorIDChanging(System.Nullable<int> value);
    partial void OnAutorIDChanged();
    partial void OnKsiazkaIDChanging(System.Nullable<int> value);
    partial void OnKsiazkaIDChanged();
    #endregion
		
		public AutorzyKsiazek()
		{
			this._Autor = default(EntityRef<Autor>);
			this._Ksiazka = default(EntityRef<Ksiazka>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDAutorzy", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDAutorzy
		{
			get
			{
				return this._IDAutorzy;
			}
			set
			{
				if ((this._IDAutorzy != value))
				{
					this.OnIDAutorzyChanging(value);
					this.SendPropertyChanging();
					this._IDAutorzy = value;
					this.SendPropertyChanged("IDAutorzy");
					this.OnIDAutorzyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AutorID", DbType="Int")]
		public System.Nullable<int> AutorID
		{
			get
			{
				return this._AutorID;
			}
			set
			{
				if ((this._AutorID != value))
				{
					if (this._Autor.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAutorIDChanging(value);
					this.SendPropertyChanging();
					this._AutorID = value;
					this.SendPropertyChanged("AutorID");
					this.OnAutorIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KsiazkaID", DbType="Int")]
		public System.Nullable<int> KsiazkaID
		{
			get
			{
				return this._KsiazkaID;
			}
			set
			{
				if ((this._KsiazkaID != value))
				{
					if (this._Ksiazka.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnKsiazkaIDChanging(value);
					this.SendPropertyChanging();
					this._KsiazkaID = value;
					this.SendPropertyChanged("KsiazkaID");
					this.OnKsiazkaIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Autor_AutorzyKsiazek", Storage="_Autor", ThisKey="AutorID", OtherKey="IDAutor", IsForeignKey=true)]
		public Autor Autor
		{
			get
			{
				return this._Autor.Entity;
			}
			set
			{
				Autor previousValue = this._Autor.Entity;
				if (((previousValue != value) 
							|| (this._Autor.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Autor.Entity = null;
						previousValue.AutorzyKsiazek.Remove(this);
					}
					this._Autor.Entity = value;
					if ((value != null))
					{
						value.AutorzyKsiazek.Add(this);
						this._AutorID = value.IDAutor;
					}
					else
					{
						this._AutorID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Autor");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Ksiazka_AutorzyKsiazek", Storage="_Ksiazka", ThisKey="KsiazkaID", OtherKey="IDKsiazki", IsForeignKey=true)]
		public Ksiazka Ksiazka
		{
			get
			{
				return this._Ksiazka.Entity;
			}
			set
			{
				Ksiazka previousValue = this._Ksiazka.Entity;
				if (((previousValue != value) 
							|| (this._Ksiazka.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Ksiazka.Entity = null;
						previousValue.AutorzyKsiazek.Remove(this);
					}
					this._Ksiazka.Entity = value;
					if ((value != null))
					{
						value.AutorzyKsiazek.Add(this);
						this._KsiazkaID = value.IDKsiazki;
					}
					else
					{
						this._KsiazkaID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Ksiazka");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Czytelnik")]
	public partial class Czytelnik : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDUzytkownika;
		
		private string _ImieU;
		
		private string _NazwiskoU;
		
		private string _Ulica;
		
		private string _Miasto;
		
		private System.Nullable<int> _Nr_domu;
		
		private string _Login;
		
		private string _Haslo;
		
		private EntitySet<Wypozyczone> _Wypozyczone;
		
		private EntitySet<Rezerwacja> _Rezerwacja;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDUzytkownikaChanging(int value);
    partial void OnIDUzytkownikaChanged();
    partial void OnImieUChanging(string value);
    partial void OnImieUChanged();
    partial void OnNazwiskoUChanging(string value);
    partial void OnNazwiskoUChanged();
    partial void OnUlicaChanging(string value);
    partial void OnUlicaChanged();
    partial void OnMiastoChanging(string value);
    partial void OnMiastoChanged();
    partial void OnNr_domuChanging(System.Nullable<int> value);
    partial void OnNr_domuChanged();
    partial void OnLoginChanging(string value);
    partial void OnLoginChanged();
    partial void OnHasloChanging(string value);
    partial void OnHasloChanged();
    #endregion
		
		public Czytelnik()
		{
			this._Wypozyczone = new EntitySet<Wypozyczone>(new Action<Wypozyczone>(this.attach_Wypozyczone), new Action<Wypozyczone>(this.detach_Wypozyczone));
			this._Rezerwacja = new EntitySet<Rezerwacja>(new Action<Rezerwacja>(this.attach_Rezerwacja), new Action<Rezerwacja>(this.detach_Rezerwacja));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDUzytkownika", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDUzytkownika
		{
			get
			{
				return this._IDUzytkownika;
			}
			set
			{
				if ((this._IDUzytkownika != value))
				{
					this.OnIDUzytkownikaChanging(value);
					this.SendPropertyChanging();
					this._IDUzytkownika = value;
					this.SendPropertyChanged("IDUzytkownika");
					this.OnIDUzytkownikaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImieU", DbType="VarChar(20)")]
		public string ImieU
		{
			get
			{
				return this._ImieU;
			}
			set
			{
				if ((this._ImieU != value))
				{
					this.OnImieUChanging(value);
					this.SendPropertyChanging();
					this._ImieU = value;
					this.SendPropertyChanged("ImieU");
					this.OnImieUChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NazwiskoU", DbType="VarChar(30)")]
		public string NazwiskoU
		{
			get
			{
				return this._NazwiskoU;
			}
			set
			{
				if ((this._NazwiskoU != value))
				{
					this.OnNazwiskoUChanging(value);
					this.SendPropertyChanging();
					this._NazwiskoU = value;
					this.SendPropertyChanged("NazwiskoU");
					this.OnNazwiskoUChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ulica", DbType="VarChar(20)")]
		public string Ulica
		{
			get
			{
				return this._Ulica;
			}
			set
			{
				if ((this._Ulica != value))
				{
					this.OnUlicaChanging(value);
					this.SendPropertyChanging();
					this._Ulica = value;
					this.SendPropertyChanged("Ulica");
					this.OnUlicaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Miasto", DbType="VarChar(20)")]
		public string Miasto
		{
			get
			{
				return this._Miasto;
			}
			set
			{
				if ((this._Miasto != value))
				{
					this.OnMiastoChanging(value);
					this.SendPropertyChanging();
					this._Miasto = value;
					this.SendPropertyChanged("Miasto");
					this.OnMiastoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nr_domu", DbType="Int")]
		public System.Nullable<int> Nr_domu
		{
			get
			{
				return this._Nr_domu;
			}
			set
			{
				if ((this._Nr_domu != value))
				{
					this.OnNr_domuChanging(value);
					this.SendPropertyChanging();
					this._Nr_domu = value;
					this.SendPropertyChanged("Nr_domu");
					this.OnNr_domuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Login", DbType="VarChar(20)")]
		public string Login
		{
			get
			{
				return this._Login;
			}
			set
			{
				if ((this._Login != value))
				{
					this.OnLoginChanging(value);
					this.SendPropertyChanging();
					this._Login = value;
					this.SendPropertyChanged("Login");
					this.OnLoginChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Haslo", DbType="VarChar(20)")]
		public string Haslo
		{
			get
			{
				return this._Haslo;
			}
			set
			{
				if ((this._Haslo != value))
				{
					this.OnHasloChanging(value);
					this.SendPropertyChanging();
					this._Haslo = value;
					this.SendPropertyChanged("Haslo");
					this.OnHasloChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Czytelnik_Wypozyczone", Storage="_Wypozyczone", ThisKey="IDUzytkownika", OtherKey="PracownikID")]
		public EntitySet<Wypozyczone> Wypozyczone
		{
			get
			{
				return this._Wypozyczone;
			}
			set
			{
				this._Wypozyczone.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Czytelnik_Rezerwacja", Storage="_Rezerwacja", ThisKey="IDUzytkownika", OtherKey="UzytkownikID")]
		public EntitySet<Rezerwacja> Rezerwacja
		{
			get
			{
				return this._Rezerwacja;
			}
			set
			{
				this._Rezerwacja.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Wypozyczone(Wypozyczone entity)
		{
			this.SendPropertyChanging();
			entity.Czytelnik = this;
		}
		
		private void detach_Wypozyczone(Wypozyczone entity)
		{
			this.SendPropertyChanging();
			entity.Czytelnik = null;
		}
		
		private void attach_Rezerwacja(Rezerwacja entity)
		{
			this.SendPropertyChanging();
			entity.Czytelnik = this;
		}
		
		private void detach_Rezerwacja(Rezerwacja entity)
		{
			this.SendPropertyChanging();
			entity.Czytelnik = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Egzemplarz")]
	public partial class Egzemplarz : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDEgzeplarza;
		
		private System.Nullable<int> _KsiazkaID;
		
		private EntitySet<Wypozyczone> _Wypozyczone;
		
		private EntitySet<Rezerwacja> _Rezerwacja;
		
		private EntityRef<Ksiazka> _Ksiazka;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDEgzeplarzaChanging(int value);
    partial void OnIDEgzeplarzaChanged();
    partial void OnKsiazkaIDChanging(System.Nullable<int> value);
    partial void OnKsiazkaIDChanged();
    #endregion
		
		public Egzemplarz()
		{
			this._Wypozyczone = new EntitySet<Wypozyczone>(new Action<Wypozyczone>(this.attach_Wypozyczone), new Action<Wypozyczone>(this.detach_Wypozyczone));
			this._Rezerwacja = new EntitySet<Rezerwacja>(new Action<Rezerwacja>(this.attach_Rezerwacja), new Action<Rezerwacja>(this.detach_Rezerwacja));
			this._Ksiazka = default(EntityRef<Ksiazka>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDEgzeplarza", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDEgzeplarza
		{
			get
			{
				return this._IDEgzeplarza;
			}
			set
			{
				if ((this._IDEgzeplarza != value))
				{
					this.OnIDEgzeplarzaChanging(value);
					this.SendPropertyChanging();
					this._IDEgzeplarza = value;
					this.SendPropertyChanged("IDEgzeplarza");
					this.OnIDEgzeplarzaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KsiazkaID", DbType="Int")]
		public System.Nullable<int> KsiazkaID
		{
			get
			{
				return this._KsiazkaID;
			}
			set
			{
				if ((this._KsiazkaID != value))
				{
					if (this._Ksiazka.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnKsiazkaIDChanging(value);
					this.SendPropertyChanging();
					this._KsiazkaID = value;
					this.SendPropertyChanged("KsiazkaID");
					this.OnKsiazkaIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Egzemplarz_Wypozyczone", Storage="_Wypozyczone", ThisKey="IDEgzeplarza", OtherKey="EgzemplarzID")]
		public EntitySet<Wypozyczone> Wypozyczone
		{
			get
			{
				return this._Wypozyczone;
			}
			set
			{
				this._Wypozyczone.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Egzemplarz_Rezerwacja", Storage="_Rezerwacja", ThisKey="IDEgzeplarza", OtherKey="EgzemplarzID")]
		public EntitySet<Rezerwacja> Rezerwacja
		{
			get
			{
				return this._Rezerwacja;
			}
			set
			{
				this._Rezerwacja.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Ksiazka_Egzemplarz", Storage="_Ksiazka", ThisKey="KsiazkaID", OtherKey="IDKsiazki", IsForeignKey=true)]
		public Ksiazka Ksiazka
		{
			get
			{
				return this._Ksiazka.Entity;
			}
			set
			{
				Ksiazka previousValue = this._Ksiazka.Entity;
				if (((previousValue != value) 
							|| (this._Ksiazka.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Ksiazka.Entity = null;
						previousValue.Egzemplarz.Remove(this);
					}
					this._Ksiazka.Entity = value;
					if ((value != null))
					{
						value.Egzemplarz.Add(this);
						this._KsiazkaID = value.IDKsiazki;
					}
					else
					{
						this._KsiazkaID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Ksiazka");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Wypozyczone(Wypozyczone entity)
		{
			this.SendPropertyChanging();
			entity.Egzemplarz = this;
		}
		
		private void detach_Wypozyczone(Wypozyczone entity)
		{
			this.SendPropertyChanging();
			entity.Egzemplarz = null;
		}
		
		private void attach_Rezerwacja(Rezerwacja entity)
		{
			this.SendPropertyChanging();
			entity.Egzemplarz = this;
		}
		
		private void detach_Rezerwacja(Rezerwacja entity)
		{
			this.SendPropertyChanging();
			entity.Egzemplarz = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Epoka")]
	public partial class Epoka : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDEpoka;
		
		private string _NazwaEpoki;
		
		private EntitySet<Autor> _Autor;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDEpokaChanging(int value);
    partial void OnIDEpokaChanged();
    partial void OnNazwaEpokiChanging(string value);
    partial void OnNazwaEpokiChanged();
    #endregion
		
		public Epoka()
		{
			this._Autor = new EntitySet<Autor>(new Action<Autor>(this.attach_Autor), new Action<Autor>(this.detach_Autor));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDEpoka", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDEpoka
		{
			get
			{
				return this._IDEpoka;
			}
			set
			{
				if ((this._IDEpoka != value))
				{
					this.OnIDEpokaChanging(value);
					this.SendPropertyChanging();
					this._IDEpoka = value;
					this.SendPropertyChanged("IDEpoka");
					this.OnIDEpokaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NazwaEpoki", DbType="VarChar(30)")]
		public string NazwaEpoki
		{
			get
			{
				return this._NazwaEpoki;
			}
			set
			{
				if ((this._NazwaEpoki != value))
				{
					this.OnNazwaEpokiChanging(value);
					this.SendPropertyChanging();
					this._NazwaEpoki = value;
					this.SendPropertyChanged("NazwaEpoki");
					this.OnNazwaEpokiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Epoka_Autor", Storage="_Autor", ThisKey="IDEpoka", OtherKey="EpokaID")]
		public EntitySet<Autor> Autor
		{
			get
			{
				return this._Autor;
			}
			set
			{
				this._Autor.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Autor(Autor entity)
		{
			this.SendPropertyChanging();
			entity.Epoka = this;
		}
		
		private void detach_Autor(Autor entity)
		{
			this.SendPropertyChanging();
			entity.Epoka = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Gatunek")]
	public partial class Gatunek : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDGatunek;
		
		private string _NazwaGatunku;
		
		private EntitySet<Ksiazka> _Ksiazka;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDGatunekChanging(int value);
    partial void OnIDGatunekChanged();
    partial void OnNazwaGatunkuChanging(string value);
    partial void OnNazwaGatunkuChanged();
    #endregion
		
		public Gatunek()
		{
			this._Ksiazka = new EntitySet<Ksiazka>(new Action<Ksiazka>(this.attach_Ksiazka), new Action<Ksiazka>(this.detach_Ksiazka));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDGatunek", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDGatunek
		{
			get
			{
				return this._IDGatunek;
			}
			set
			{
				if ((this._IDGatunek != value))
				{
					this.OnIDGatunekChanging(value);
					this.SendPropertyChanging();
					this._IDGatunek = value;
					this.SendPropertyChanged("IDGatunek");
					this.OnIDGatunekChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NazwaGatunku", DbType="VarChar(20)")]
		public string NazwaGatunku
		{
			get
			{
				return this._NazwaGatunku;
			}
			set
			{
				if ((this._NazwaGatunku != value))
				{
					this.OnNazwaGatunkuChanging(value);
					this.SendPropertyChanging();
					this._NazwaGatunku = value;
					this.SendPropertyChanged("NazwaGatunku");
					this.OnNazwaGatunkuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Gatunek_Ksiazka", Storage="_Ksiazka", ThisKey="IDGatunek", OtherKey="GatunekID")]
		public EntitySet<Ksiazka> Ksiazka
		{
			get
			{
				return this._Ksiazka;
			}
			set
			{
				this._Ksiazka.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Ksiazka(Ksiazka entity)
		{
			this.SendPropertyChanging();
			entity.Gatunek = this;
		}
		
		private void detach_Ksiazka(Ksiazka entity)
		{
			this.SendPropertyChanging();
			entity.Gatunek = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Ksiazka")]
	public partial class Ksiazka : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDKsiazki;
		
		private string _Tytul;
		
		private System.Nullable<int> _AutorID;
		
		private System.Nullable<int> _WydawnictwoID;
		
		private System.Nullable<long> _ISBN;
		
		private int _Ilosc;
		
		private System.Nullable<System.DateTime> _Rok;
		
		private System.Nullable<int> _GatunekID;
		
		private EntitySet<AutorzyKsiazek> _AutorzyKsiazek;
		
		private EntitySet<Egzemplarz> _Egzemplarz;
		
		private EntityRef<Gatunek> _Gatunek;
		
		private EntityRef<Wydawnictwo> _Wydawnictwo;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDKsiazkiChanging(int value);
    partial void OnIDKsiazkiChanged();
    partial void OnTytulChanging(string value);
    partial void OnTytulChanged();
    partial void OnAutorIDChanging(System.Nullable<int> value);
    partial void OnAutorIDChanged();
    partial void OnWydawnictwoIDChanging(System.Nullable<int> value);
    partial void OnWydawnictwoIDChanged();
    partial void OnISBNChanging(System.Nullable<long> value);
    partial void OnISBNChanged();
    partial void OnIloscChanging(int value);
    partial void OnIloscChanged();
    partial void OnRokChanging(System.Nullable<System.DateTime> value);
    partial void OnRokChanged();
    partial void OnGatunekIDChanging(System.Nullable<int> value);
    partial void OnGatunekIDChanged();
    #endregion
		
		public Ksiazka()
		{
			this._AutorzyKsiazek = new EntitySet<AutorzyKsiazek>(new Action<AutorzyKsiazek>(this.attach_AutorzyKsiazek), new Action<AutorzyKsiazek>(this.detach_AutorzyKsiazek));
			this._Egzemplarz = new EntitySet<Egzemplarz>(new Action<Egzemplarz>(this.attach_Egzemplarz), new Action<Egzemplarz>(this.detach_Egzemplarz));
			this._Gatunek = default(EntityRef<Gatunek>);
			this._Wydawnictwo = default(EntityRef<Wydawnictwo>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDKsiazki", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDKsiazki
		{
			get
			{
				return this._IDKsiazki;
			}
			set
			{
				if ((this._IDKsiazki != value))
				{
					this.OnIDKsiazkiChanging(value);
					this.SendPropertyChanging();
					this._IDKsiazki = value;
					this.SendPropertyChanged("IDKsiazki");
					this.OnIDKsiazkiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tytul", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string Tytul
		{
			get
			{
				return this._Tytul;
			}
			set
			{
				if ((this._Tytul != value))
				{
					this.OnTytulChanging(value);
					this.SendPropertyChanging();
					this._Tytul = value;
					this.SendPropertyChanged("Tytul");
					this.OnTytulChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AutorID", DbType="Int")]
		public System.Nullable<int> AutorID
		{
			get
			{
				return this._AutorID;
			}
			set
			{
				if ((this._AutorID != value))
				{
					this.OnAutorIDChanging(value);
					this.SendPropertyChanging();
					this._AutorID = value;
					this.SendPropertyChanged("AutorID");
					this.OnAutorIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WydawnictwoID", DbType="Int")]
		public System.Nullable<int> WydawnictwoID
		{
			get
			{
				return this._WydawnictwoID;
			}
			set
			{
				if ((this._WydawnictwoID != value))
				{
					if (this._Wydawnictwo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnWydawnictwoIDChanging(value);
					this.SendPropertyChanging();
					this._WydawnictwoID = value;
					this.SendPropertyChanged("WydawnictwoID");
					this.OnWydawnictwoIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ISBN", DbType="BigInt")]
		public System.Nullable<long> ISBN
		{
			get
			{
				return this._ISBN;
			}
			set
			{
				if ((this._ISBN != value))
				{
					this.OnISBNChanging(value);
					this.SendPropertyChanging();
					this._ISBN = value;
					this.SendPropertyChanged("ISBN");
					this.OnISBNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ilosc", DbType="Int NOT NULL")]
		public int Ilosc
		{
			get
			{
				return this._Ilosc;
			}
			set
			{
				if ((this._Ilosc != value))
				{
					this.OnIloscChanging(value);
					this.SendPropertyChanging();
					this._Ilosc = value;
					this.SendPropertyChanged("Ilosc");
					this.OnIloscChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rok", DbType="Date")]
		public System.Nullable<System.DateTime> Rok
		{
			get
			{
				return this._Rok;
			}
			set
			{
				if ((this._Rok != value))
				{
					this.OnRokChanging(value);
					this.SendPropertyChanging();
					this._Rok = value;
					this.SendPropertyChanged("Rok");
					this.OnRokChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GatunekID", DbType="Int")]
		public System.Nullable<int> GatunekID
		{
			get
			{
				return this._GatunekID;
			}
			set
			{
				if ((this._GatunekID != value))
				{
					if (this._Gatunek.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGatunekIDChanging(value);
					this.SendPropertyChanging();
					this._GatunekID = value;
					this.SendPropertyChanged("GatunekID");
					this.OnGatunekIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Ksiazka_AutorzyKsiazek", Storage="_AutorzyKsiazek", ThisKey="IDKsiazki", OtherKey="KsiazkaID")]
		public EntitySet<AutorzyKsiazek> AutorzyKsiazek
		{
			get
			{
				return this._AutorzyKsiazek;
			}
			set
			{
				this._AutorzyKsiazek.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Ksiazka_Egzemplarz", Storage="_Egzemplarz", ThisKey="IDKsiazki", OtherKey="KsiazkaID")]
		public EntitySet<Egzemplarz> Egzemplarz
		{
			get
			{
				return this._Egzemplarz;
			}
			set
			{
				this._Egzemplarz.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Gatunek_Ksiazka", Storage="_Gatunek", ThisKey="GatunekID", OtherKey="IDGatunek", IsForeignKey=true)]
		public Gatunek Gatunek
		{
			get
			{
				return this._Gatunek.Entity;
			}
			set
			{
				Gatunek previousValue = this._Gatunek.Entity;
				if (((previousValue != value) 
							|| (this._Gatunek.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Gatunek.Entity = null;
						previousValue.Ksiazka.Remove(this);
					}
					this._Gatunek.Entity = value;
					if ((value != null))
					{
						value.Ksiazka.Add(this);
						this._GatunekID = value.IDGatunek;
					}
					else
					{
						this._GatunekID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Gatunek");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Wydawnictwo_Ksiazka", Storage="_Wydawnictwo", ThisKey="WydawnictwoID", OtherKey="IDWydawnictwo", IsForeignKey=true)]
		public Wydawnictwo Wydawnictwo
		{
			get
			{
				return this._Wydawnictwo.Entity;
			}
			set
			{
				Wydawnictwo previousValue = this._Wydawnictwo.Entity;
				if (((previousValue != value) 
							|| (this._Wydawnictwo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Wydawnictwo.Entity = null;
						previousValue.Ksiazka.Remove(this);
					}
					this._Wydawnictwo.Entity = value;
					if ((value != null))
					{
						value.Ksiazka.Add(this);
						this._WydawnictwoID = value.IDWydawnictwo;
					}
					else
					{
						this._WydawnictwoID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Wydawnictwo");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AutorzyKsiazek(AutorzyKsiazek entity)
		{
			this.SendPropertyChanging();
			entity.Ksiazka = this;
		}
		
		private void detach_AutorzyKsiazek(AutorzyKsiazek entity)
		{
			this.SendPropertyChanging();
			entity.Ksiazka = null;
		}
		
		private void attach_Egzemplarz(Egzemplarz entity)
		{
			this.SendPropertyChanging();
			entity.Ksiazka = this;
		}
		
		private void detach_Egzemplarz(Egzemplarz entity)
		{
			this.SendPropertyChanging();
			entity.Ksiazka = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Narodowosc")]
	public partial class Narodowosc : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDNarodowosc;
		
		private string _NazwaNarodowosci;
		
		private EntitySet<Autor> _Autor;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDNarodowoscChanging(int value);
    partial void OnIDNarodowoscChanged();
    partial void OnNazwaNarodowosciChanging(string value);
    partial void OnNazwaNarodowosciChanged();
    #endregion
		
		public Narodowosc()
		{
			this._Autor = new EntitySet<Autor>(new Action<Autor>(this.attach_Autor), new Action<Autor>(this.detach_Autor));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDNarodowosc", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDNarodowosc
		{
			get
			{
				return this._IDNarodowosc;
			}
			set
			{
				if ((this._IDNarodowosc != value))
				{
					this.OnIDNarodowoscChanging(value);
					this.SendPropertyChanging();
					this._IDNarodowosc = value;
					this.SendPropertyChanged("IDNarodowosc");
					this.OnIDNarodowoscChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NazwaNarodowosci", DbType="VarChar(20)")]
		public string NazwaNarodowosci
		{
			get
			{
				return this._NazwaNarodowosci;
			}
			set
			{
				if ((this._NazwaNarodowosci != value))
				{
					this.OnNazwaNarodowosciChanging(value);
					this.SendPropertyChanging();
					this._NazwaNarodowosci = value;
					this.SendPropertyChanged("NazwaNarodowosci");
					this.OnNazwaNarodowosciChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Narodowosc_Autor", Storage="_Autor", ThisKey="IDNarodowosc", OtherKey="NarodowoscID")]
		public EntitySet<Autor> Autor
		{
			get
			{
				return this._Autor;
			}
			set
			{
				this._Autor.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Autor(Autor entity)
		{
			this.SendPropertyChanging();
			entity.Narodowosc = this;
		}
		
		private void detach_Autor(Autor entity)
		{
			this.SendPropertyChanging();
			entity.Narodowosc = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Pracownik")]
	public partial class Pracownik : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDPracownika;
		
		private string _LoginP;
		
		private string _HasloP;
		
		private EntitySet<Wypozyczone> _Wypozyczone;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDPracownikaChanging(int value);
    partial void OnIDPracownikaChanged();
    partial void OnLoginPChanging(string value);
    partial void OnLoginPChanged();
    partial void OnHasloPChanging(string value);
    partial void OnHasloPChanged();
    #endregion
		
		public Pracownik()
		{
			this._Wypozyczone = new EntitySet<Wypozyczone>(new Action<Wypozyczone>(this.attach_Wypozyczone), new Action<Wypozyczone>(this.detach_Wypozyczone));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDPracownika", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDPracownika
		{
			get
			{
				return this._IDPracownika;
			}
			set
			{
				if ((this._IDPracownika != value))
				{
					this.OnIDPracownikaChanging(value);
					this.SendPropertyChanging();
					this._IDPracownika = value;
					this.SendPropertyChanged("IDPracownika");
					this.OnIDPracownikaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoginP", DbType="VarChar(50)")]
		public string LoginP
		{
			get
			{
				return this._LoginP;
			}
			set
			{
				if ((this._LoginP != value))
				{
					this.OnLoginPChanging(value);
					this.SendPropertyChanging();
					this._LoginP = value;
					this.SendPropertyChanged("LoginP");
					this.OnLoginPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasloP", DbType="VarChar(50)")]
		public string HasloP
		{
			get
			{
				return this._HasloP;
			}
			set
			{
				if ((this._HasloP != value))
				{
					this.OnHasloPChanging(value);
					this.SendPropertyChanging();
					this._HasloP = value;
					this.SendPropertyChanged("HasloP");
					this.OnHasloPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Pracownik_Wypozyczone", Storage="_Wypozyczone", ThisKey="IDPracownika", OtherKey="PracownikID")]
		public EntitySet<Wypozyczone> Wypozyczone
		{
			get
			{
				return this._Wypozyczone;
			}
			set
			{
				this._Wypozyczone.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Wypozyczone(Wypozyczone entity)
		{
			this.SendPropertyChanging();
			entity.Pracownik = this;
		}
		
		private void detach_Wypozyczone(Wypozyczone entity)
		{
			this.SendPropertyChanging();
			entity.Pracownik = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Rezerwacja")]
	public partial class Rezerwacja : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDRezerwacja;
		
		private System.Nullable<int> _UzytkownikID;
		
		private System.Nullable<int> _EgzemplarzID;
		
		private System.Nullable<System.DateTime> _DataRez;
		
		private EntityRef<Egzemplarz> _Egzemplarz;
		
		private EntityRef<Czytelnik> _Czytelnik;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDRezerwacjaChanging(int value);
    partial void OnIDRezerwacjaChanged();
    partial void OnUzytkownikIDChanging(System.Nullable<int> value);
    partial void OnUzytkownikIDChanged();
    partial void OnEgzemplarzIDChanging(System.Nullable<int> value);
    partial void OnEgzemplarzIDChanged();
    partial void OnDataRezChanging(System.Nullable<System.DateTime> value);
    partial void OnDataRezChanged();
    #endregion
		
		public Rezerwacja()
		{
			this._Egzemplarz = default(EntityRef<Egzemplarz>);
			this._Czytelnik = default(EntityRef<Czytelnik>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDRezerwacja", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDRezerwacja
		{
			get
			{
				return this._IDRezerwacja;
			}
			set
			{
				if ((this._IDRezerwacja != value))
				{
					this.OnIDRezerwacjaChanging(value);
					this.SendPropertyChanging();
					this._IDRezerwacja = value;
					this.SendPropertyChanged("IDRezerwacja");
					this.OnIDRezerwacjaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UzytkownikID", DbType="Int")]
		public System.Nullable<int> UzytkownikID
		{
			get
			{
				return this._UzytkownikID;
			}
			set
			{
				if ((this._UzytkownikID != value))
				{
					if (this._Czytelnik.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUzytkownikIDChanging(value);
					this.SendPropertyChanging();
					this._UzytkownikID = value;
					this.SendPropertyChanged("UzytkownikID");
					this.OnUzytkownikIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EgzemplarzID", DbType="Int")]
		public System.Nullable<int> EgzemplarzID
		{
			get
			{
				return this._EgzemplarzID;
			}
			set
			{
				if ((this._EgzemplarzID != value))
				{
					if (this._Egzemplarz.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEgzemplarzIDChanging(value);
					this.SendPropertyChanging();
					this._EgzemplarzID = value;
					this.SendPropertyChanged("EgzemplarzID");
					this.OnEgzemplarzIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DataRez", DbType="Date")]
		public System.Nullable<System.DateTime> DataRez
		{
			get
			{
				return this._DataRez;
			}
			set
			{
				if ((this._DataRez != value))
				{
					this.OnDataRezChanging(value);
					this.SendPropertyChanging();
					this._DataRez = value;
					this.SendPropertyChanged("DataRez");
					this.OnDataRezChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Egzemplarz_Rezerwacja", Storage="_Egzemplarz", ThisKey="EgzemplarzID", OtherKey="IDEgzeplarza", IsForeignKey=true)]
		public Egzemplarz Egzemplarz
		{
			get
			{
				return this._Egzemplarz.Entity;
			}
			set
			{
				Egzemplarz previousValue = this._Egzemplarz.Entity;
				if (((previousValue != value) 
							|| (this._Egzemplarz.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Egzemplarz.Entity = null;
						previousValue.Rezerwacja.Remove(this);
					}
					this._Egzemplarz.Entity = value;
					if ((value != null))
					{
						value.Rezerwacja.Add(this);
						this._EgzemplarzID = value.IDEgzeplarza;
					}
					else
					{
						this._EgzemplarzID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Egzemplarz");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Czytelnik_Rezerwacja", Storage="_Czytelnik", ThisKey="UzytkownikID", OtherKey="IDUzytkownika", IsForeignKey=true)]
		public Czytelnik Czytelnik
		{
			get
			{
				return this._Czytelnik.Entity;
			}
			set
			{
				Czytelnik previousValue = this._Czytelnik.Entity;
				if (((previousValue != value) 
							|| (this._Czytelnik.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Czytelnik.Entity = null;
						previousValue.Rezerwacja.Remove(this);
					}
					this._Czytelnik.Entity = value;
					if ((value != null))
					{
						value.Rezerwacja.Add(this);
						this._UzytkownikID = value.IDUzytkownika;
					}
					else
					{
						this._UzytkownikID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Czytelnik");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Wydawnictwo")]
	public partial class Wydawnictwo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDWydawnictwo;
		
		private string _NazwaWyd;
		
		private EntitySet<Ksiazka> _Ksiazka;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDWydawnictwoChanging(int value);
    partial void OnIDWydawnictwoChanged();
    partial void OnNazwaWydChanging(string value);
    partial void OnNazwaWydChanged();
    #endregion
		
		public Wydawnictwo()
		{
			this._Ksiazka = new EntitySet<Ksiazka>(new Action<Ksiazka>(this.attach_Ksiazka), new Action<Ksiazka>(this.detach_Ksiazka));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDWydawnictwo", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDWydawnictwo
		{
			get
			{
				return this._IDWydawnictwo;
			}
			set
			{
				if ((this._IDWydawnictwo != value))
				{
					this.OnIDWydawnictwoChanging(value);
					this.SendPropertyChanging();
					this._IDWydawnictwo = value;
					this.SendPropertyChanged("IDWydawnictwo");
					this.OnIDWydawnictwoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NazwaWyd", DbType="VarChar(30)")]
		public string NazwaWyd
		{
			get
			{
				return this._NazwaWyd;
			}
			set
			{
				if ((this._NazwaWyd != value))
				{
					this.OnNazwaWydChanging(value);
					this.SendPropertyChanging();
					this._NazwaWyd = value;
					this.SendPropertyChanged("NazwaWyd");
					this.OnNazwaWydChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Wydawnictwo_Ksiazka", Storage="_Ksiazka", ThisKey="IDWydawnictwo", OtherKey="WydawnictwoID")]
		public EntitySet<Ksiazka> Ksiazka
		{
			get
			{
				return this._Ksiazka;
			}
			set
			{
				this._Ksiazka.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Ksiazka(Ksiazka entity)
		{
			this.SendPropertyChanging();
			entity.Wydawnictwo = this;
		}
		
		private void detach_Ksiazka(Ksiazka entity)
		{
			this.SendPropertyChanging();
			entity.Wydawnictwo = null;
		}
	}
}
#pragma warning restore 1591
